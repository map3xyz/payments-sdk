{"mappings":"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","sources":["src/index.tsx","src/App.tsx","src/App.withAsset.tsx","src/components/ErrorWrapper/index.tsx","src/components/InnerWrapper/index.tsx","src/components/LoadingWrapper/index.tsx","src/generated/apollo-gql.tsx","src/providers/Store/index.tsx","src/steps/index.tsx","src/assets/logo.svg","src/components/ProgressBar/index.tsx","src/steps/AssetSelection/index.tsx","src/steps/EnterAmount/index.tsx","src/components/MethodIcon/index.tsx","src/steps/NetworkSelection/index.tsx","src/steps/PaymentMethod/index.tsx","src/steps/QRCode/index.tsx","src/App.withAssetAndNetwork.tsx"],"sourcesContent":["import '@fortawesome/fontawesome-free/css/all.min.css';\nimport '@map3xyz/components/dist/index.css';\nimport './index.css';\n\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport { createRoot, Root } from 'react-dom/client';\n\nimport App from './App';\n\nexport interface Map3InitConfig {\n  anonKey: string;\n  generateDepositAddress: (asset?: string, network?: string) => Promise<string>;\n  slug?: string;\n  theme?: 'dark' | 'light';\n}\nexport class Map3 {\n  private onClose: () => void;\n  private root: Root;\n  private config: Map3InitConfig;\n\n  constructor(config: Map3InitConfig) {\n    if (!config.generateDepositAddress) {\n      throw new Error('generateDepositAddress is required');\n    }\n\n    if (!config.theme) {\n      config.theme = 'light';\n    }\n\n    this.config = config;\n\n    this.onClose = () => {\n      this.root.unmount();\n      document.body.classList.remove('dark');\n    };\n\n    const element = document.createElement('div');\n    element.id = 'map3';\n    document.body.appendChild(element);\n\n    if (config.theme === 'dark') {\n      document.body.classList.add('dark');\n    }\n\n    this.root = createRoot(element);\n  }\n\n  public open() {\n    const client = new ApolloClient({\n      cache: new InMemoryCache(),\n      headers: {\n        Authorization: 'Bearer ' + this.config.anonKey,\n      },\n      uri: 'http://localhost:3001/api/graphql',\n    });\n    this.root.render(\n      <ApolloProvider client={client}>\n        <App config={this.config} onClose={this.onClose} />\n      </ApolloProvider>\n    );\n  }\n\n  public close() {\n    this.onClose();\n  }\n}\n\nexport const initMap3Sdk = (args: Map3InitConfig) => {\n  return new Map3(args);\n};\n\n// @ts-ignore\nwindow.initMap3Sdk = initMap3Sdk;\n","import { Modal } from '@map3xyz/components';\nimport React from 'react';\n\nimport { Map3InitConfig } from '.';\nimport AppWithAsset from './App.withAsset';\nimport AppWithAssetAndNetwork from './App.withAssetAndNetwork';\nimport { Store } from './providers/Store';\nimport Map3SdkSteps from './steps';\n\nconst TRANSITION = 300;\n\nconst App: React.FC<AppProps> = ({ config, onClose }) => {\n  const [network, asset] = config.slug?.split(':') ?? [];\n\n  return (\n    <div data-testid=\"map3-modal\">\n      <Modal\n        className=\"map3\"\n        footerBackground\n        onCancel={onClose}\n        size=\"small\"\n        transition={TRANSITION}\n        visible\n      >\n        {asset && network ? (\n          <AppWithAssetAndNetwork config={config} onClose={onClose} />\n        ) : asset ? (\n          <AppWithAsset config={config} onClose={onClose} />\n        ) : (\n          <Store {...config}>\n            <Map3SdkSteps onClose={onClose} />\n          </Store>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport type AppProps = {\n  config: Map3InitConfig;\n  onClose: () => void;\n};\n\nexport default App;\n","import React from 'react';\n\nimport { AppProps } from './App';\nimport ErrorWrapper from './components/ErrorWrapper';\nimport LoadingWrapper from './components/LoadingWrapper';\nimport { useGetAssetsQuery } from './generated/apollo-gql';\nimport { Store } from './providers/Store';\nimport Map3SdkSteps from './steps';\n\nconst AppWithAsset: React.FC<AppProps> = ({ config, onClose }) => {\n  const [_, assetString] = config?.slug?.split(':') ?? [];\n  // TODO: use asset search\n  const { data, error, loading, refetch } = useGetAssetsQuery();\n\n  if (loading) return <LoadingWrapper />;\n\n  const asset = data?.assets?.find((asset) => asset?.name === assetString);\n\n  if (error || !asset)\n    return (\n      <ErrorWrapper\n        description=\"We had trouble finding that asset.\"\n        header=\"Failed to initialize the SDK\"\n        retry={refetch}\n      />\n    );\n\n  return (\n    <Store {...config} asset={asset}>\n      <Map3SdkSteps onClose={onClose} />\n    </Store>\n  );\n};\n\nexport default AppWithAsset;\n","import React, { PropsWithChildren } from 'react';\n\nimport InnerWrapper from '../InnerWrapper';\n\nconst ErrorWrapper: React.FC<PropsWithChildren<Props>> = ({\n  description,\n  header,\n  retry,\n}) => {\n  return (\n    <InnerWrapper>\n      <div className=\"flex items-center gap-1 text-lg font-bold\">\n        <i className=\"fa fa-circle-xmark text-red-600\"></i>{' '}\n        <h3 className=\" dark:text-white\">{header}</h3>\n      </div>\n      <div className=\"mt-1 text-xs text-neutral-500\">\n        {description} Please{' '}\n        <a className=\"cursor-pointer text-blue-600 underline\" onClick={retry}>\n          click here\n        </a>{' '}\n        to retry. If the error persists, please contact support.\n      </div>\n    </InnerWrapper>\n  );\n};\n\ntype Props = {\n  description: string;\n  header: string;\n  retry: () => void;\n};\n\nexport default ErrorWrapper;\n","import React, { PropsWithChildren } from 'react';\n\nconst InnerWrapper: React.FC<PropsWithChildren<Props>> = ({ children }) => {\n  return <div className=\"w-full px-4 py-3\">{children}</div>;\n};\n\ntype Props = {};\n\nexport default InnerWrapper;\n","import React from 'react';\n\nconst LoadingWrapper: React.FC<Props> = ({ message }) => {\n  return (\n    <div className=\"flex h-64 w-full items-center justify-center text-sm\">\n      <div className=\"flex flex-col items-center justify-center gap-2 font-semibold text-neutral-500\">\n        <div className=\"animate-spin \">\n          <i className=\"fa fa-gear\"></i>\n        </div>\n        <span>{message || 'Loading...'}</span>\n      </div>\n    </div>\n  );\n};\n\ntype Props = {\n  message?: string;\n};\n\nexport default LoadingWrapper;\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\nconst defaultOptions = {} as const;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Asset = {\n  __typename?: 'Asset';\n  logo?: Maybe<Logo>;\n  name?: Maybe<Scalars['String']>;\n  symbol?: Maybe<Scalars['String']>;\n};\n\nexport type Logo = {\n  __typename?: 'Logo';\n  png?: Maybe<Scalars['String']>;\n  svg?: Maybe<Scalars['String']>;\n};\n\nexport type Network = {\n  __typename?: 'Network';\n  logo?: Maybe<Logo>;\n  name?: Maybe<Scalars['String']>;\n  symbol?: Maybe<Scalars['String']>;\n};\n\nexport type PaymentMethod = {\n  __typename?: 'PaymentMethod';\n  enabled?: Maybe<Scalars['Boolean']>;\n  icon?: Maybe<Scalars['String']>;\n  logo?: Maybe<Scalars['String']>;\n  name?: Maybe<Scalars['String']>;\n  value?: Maybe<Scalars['String']>;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  assets?: Maybe<Array<Maybe<Asset>>>;\n  methods?: Maybe<Array<Maybe<PaymentMethod>>>;\n  networks?: Maybe<Array<Maybe<Network>>>;\n};\n\nexport type GetAssetsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAssetsQuery = { __typename?: 'Query', assets?: Array<{ __typename?: 'Asset', name?: string | null, symbol?: string | null, logo?: { __typename?: 'Logo', png?: string | null, svg?: string | null } | null } | null> | null };\n\nexport type GetNetworksQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetNetworksQuery = { __typename?: 'Query', networks?: Array<{ __typename?: 'Network', name?: string | null, symbol?: string | null, logo?: { __typename?: 'Logo', png?: string | null, svg?: string | null } | null } | null> | null };\n\nexport type GetPaymentMethodsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetPaymentMethodsQuery = { __typename?: 'Query', methods?: Array<{ __typename?: 'PaymentMethod', name?: string | null, icon?: string | null, logo?: string | null, value?: string | null, enabled?: boolean | null } | null> | null };\n\n\nexport const GetAssetsDocument = gql`\n    query GetAssets {\n  assets {\n    name\n    logo {\n      png\n      svg\n    }\n    symbol\n  }\n}\n    `;\n\n/**\n * __useGetAssetsQuery__\n *\n * To run a query within a React component, call `useGetAssetsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAssetsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAssetsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAssetsQuery(baseOptions?: Apollo.QueryHookOptions<GetAssetsQuery, GetAssetsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetAssetsQuery, GetAssetsQueryVariables>(GetAssetsDocument, options);\n      }\nexport function useGetAssetsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAssetsQuery, GetAssetsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetAssetsQuery, GetAssetsQueryVariables>(GetAssetsDocument, options);\n        }\nexport type GetAssetsQueryHookResult = ReturnType<typeof useGetAssetsQuery>;\nexport type GetAssetsLazyQueryHookResult = ReturnType<typeof useGetAssetsLazyQuery>;\nexport type GetAssetsQueryResult = Apollo.QueryResult<GetAssetsQuery, GetAssetsQueryVariables>;\nexport const GetNetworksDocument = gql`\n    query GetNetworks {\n  networks {\n    name\n    logo {\n      png\n      svg\n    }\n    symbol\n  }\n}\n    `;\n\n/**\n * __useGetNetworksQuery__\n *\n * To run a query within a React component, call `useGetNetworksQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetNetworksQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetNetworksQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetNetworksQuery(baseOptions?: Apollo.QueryHookOptions<GetNetworksQuery, GetNetworksQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetNetworksQuery, GetNetworksQueryVariables>(GetNetworksDocument, options);\n      }\nexport function useGetNetworksLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetNetworksQuery, GetNetworksQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetNetworksQuery, GetNetworksQueryVariables>(GetNetworksDocument, options);\n        }\nexport type GetNetworksQueryHookResult = ReturnType<typeof useGetNetworksQuery>;\nexport type GetNetworksLazyQueryHookResult = ReturnType<typeof useGetNetworksLazyQuery>;\nexport type GetNetworksQueryResult = Apollo.QueryResult<GetNetworksQuery, GetNetworksQueryVariables>;\nexport const GetPaymentMethodsDocument = gql`\n    query GetPaymentMethods {\n  methods {\n    name\n    icon\n    logo\n    value\n    enabled\n  }\n}\n    `;\n\n/**\n * __useGetPaymentMethodsQuery__\n *\n * To run a query within a React component, call `useGetPaymentMethodsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetPaymentMethodsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetPaymentMethodsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetPaymentMethodsQuery(baseOptions?: Apollo.QueryHookOptions<GetPaymentMethodsQuery, GetPaymentMethodsQueryVariables>) {\n        const options = {...defaultOptions, ...baseOptions}\n        return Apollo.useQuery<GetPaymentMethodsQuery, GetPaymentMethodsQueryVariables>(GetPaymentMethodsDocument, options);\n      }\nexport function useGetPaymentMethodsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetPaymentMethodsQuery, GetPaymentMethodsQueryVariables>) {\n          const options = {...defaultOptions, ...baseOptions}\n          return Apollo.useLazyQuery<GetPaymentMethodsQuery, GetPaymentMethodsQueryVariables>(GetPaymentMethodsDocument, options);\n        }\nexport type GetPaymentMethodsQueryHookResult = ReturnType<typeof useGetPaymentMethodsQuery>;\nexport type GetPaymentMethodsLazyQueryHookResult = ReturnType<typeof useGetPaymentMethodsLazyQuery>;\nexport type GetPaymentMethodsQueryResult = Apollo.QueryResult<GetPaymentMethodsQuery, GetPaymentMethodsQueryVariables>;","import React, { createContext, PropsWithChildren, useReducer } from 'react';\n\nimport { Asset, Network, PaymentMethod } from '../../generated/apollo-gql';\n\nexport enum Steps {\n  'AssetSelection' = 0,\n  'NetworkSelection' = 1,\n  'PaymentMethod' = 2,\n  'EnterAmount' = 3,\n  'Summary' = 4,\n  __LENGTH,\n}\n\ntype State = {\n  asset?: Asset;\n  depositAddress: {\n    data: string | undefined;\n    status: 'loading' | 'success' | 'error' | 'idle';\n  };\n  method?: PaymentMethod;\n  network?: Network;\n  slug?: string;\n  step: number;\n  steps: (keyof typeof Steps)[];\n  theme?: 'dark' | 'light';\n};\n\ntype Action =\n  | { payload: Asset; type: 'SET_ASSET' }\n  | { payload: Network; type: 'SET_NETWORK' }\n  | { payload: PaymentMethod; type: 'SET_PAYMENT_METHOD' }\n  | { payload: number; type: 'SET_STEP' }\n  | { payload: (keyof typeof Steps)[]; type: 'SET_STEPS' }\n  | { payload: string; type: 'GENERATE_DEPOSIT_ADDRESS_SUCCESS' }\n  | { type: 'GENERATE_DEPOSIT_ADDRESS_ERROR' }\n  | { type: 'GENERATE_DEPOSIT_ADDRESS_LOADING' }\n  | { type: 'GENERATE_DEPOSIT_ADDRESS_IDLE' };\n\nconst initialState: State = {\n  asset: undefined,\n  depositAddress: {\n    data: undefined,\n    status: 'idle',\n  },\n  method: undefined,\n  network: undefined,\n  slug: undefined,\n  step: Steps.AssetSelection,\n  steps: [\n    'AssetSelection',\n    'NetworkSelection',\n    'PaymentMethod',\n    'EnterAmount',\n    'Summary',\n  ],\n  theme: undefined,\n};\n\nexport const Store: React.FC<\n  PropsWithChildren<{\n    asset?: Asset;\n    generateDepositAddress: (\n      asset?: string,\n      network?: string\n    ) => Promise<string>;\n    network?: Network;\n    slug?: string;\n    theme?: 'dark' | 'light';\n  }>\n> = ({ asset, children, generateDepositAddress, network, slug, theme }) => {\n  let step = 0;\n\n  if (asset) {\n    step = Steps.NetworkSelection;\n  }\n\n  if (asset && network) {\n    step = Steps.PaymentMethod;\n  }\n\n  const [state, dispatch] = useReducer(\n    (state: State, action: Action): State => {\n      switch (action.type) {\n        case 'SET_ASSET':\n          return { ...state, asset: action.payload };\n        case 'SET_NETWORK':\n          return { ...state, network: action.payload };\n        case 'SET_STEP':\n          return {\n            ...state,\n            step: state.steps.indexOf(\n              Steps[action.payload] as keyof typeof Steps\n            ),\n          };\n        case 'SET_STEPS': {\n          return { ...state, steps: action.payload };\n        }\n        case 'SET_PAYMENT_METHOD':\n          return { ...state, method: action.payload };\n        case 'GENERATE_DEPOSIT_ADDRESS_SUCCESS':\n          return {\n            ...state,\n            depositAddress: {\n              data: action.payload,\n              status: 'success',\n            },\n          };\n        case 'GENERATE_DEPOSIT_ADDRESS_ERROR':\n          return {\n            ...state,\n            depositAddress: {\n              data: undefined,\n              status: 'error',\n            },\n          };\n        case 'GENERATE_DEPOSIT_ADDRESS_LOADING':\n          return {\n            ...state,\n            depositAddress: {\n              data: undefined,\n              status: 'loading',\n            },\n          };\n        case 'GENERATE_DEPOSIT_ADDRESS_IDLE':\n          return {\n            ...state,\n            depositAddress: {\n              data: undefined,\n              status: 'idle',\n            },\n          };\n        default:\n          return state;\n      }\n    },\n    { ...initialState, asset, network, slug, step, theme }\n  );\n\n  return (\n    <Context.Provider value={[state, dispatch, { generateDepositAddress }]}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nexport const Context = createContext<\n  [\n    State,\n    React.Dispatch<Action>,\n    {\n      generateDepositAddress: (\n        asset?: string,\n        network?: string\n      ) => Promise<string>;\n    }\n  ]\n>([\n  initialState,\n  () => null,\n  { generateDepositAddress: () => new Promise((resolve) => resolve('')) },\n]);\n","import { AnimatePresence, motion } from 'framer-motion';\nimport React, { useContext } from 'react';\n\nimport Logo from '../assets/logo.svg';\nimport InnerWrapper from '../components/InnerWrapper';\nimport ProgressBar from '../components/ProgressBar';\nimport { Context, Steps } from '../providers/Store';\nimport AssetSelection from '../steps/AssetSelection';\nimport EnterAmount from '../steps/EnterAmount';\nimport NetworkSelection from '../steps/NetworkSelection';\nimport PaymentMethod from '../steps/PaymentMethod';\nimport QRCode from '../steps/QRCode';\n\nconst Map3SdkSteps: React.FC<Props> = ({ onClose }) => {\n  const [state, dispatch] = useContext(Context);\n\n  const { step, steps } = state;\n\n  return (\n    <>\n      <InnerWrapper>\n        <div className=\"flex w-full items-center justify-between gap-4\">\n          <button\n            aria-label=\"Back\"\n            className={step === 0 ? 'invisible' : 'visible'}\n            onClick={() => dispatch({ payload: step - 1, type: 'SET_STEP' })}\n          >\n            <i className=\"fa transition-color fa-long-arrow-left duration-75 dark:text-neutral-600 dark:hover:text-neutral-400\" />\n          </button>\n          <ProgressBar progress={step / (steps.length - 1)} />\n          <div>\n            <button onClick={onClose}>\n              <i className=\"fa transition-color fa-close duration-75 dark:text-neutral-600 dark:hover:text-neutral-400\" />\n            </button>\n          </div>\n        </div>\n      </InnerWrapper>\n      <div className=\"!mt-0 w-full\">\n        <AnimatePresence mode=\"wait\">\n          {steps[step] === Steps[Steps.AssetSelection] && (\n            <motion.div\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              initial={{ opacity: 0 }}\n              key={Steps[step]}\n            >\n              <AssetSelection />\n            </motion.div>\n          )}\n          {steps[step] === Steps[Steps.NetworkSelection] && (\n            <motion.div\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              initial={{ opacity: 0 }}\n              key={Steps[step]}\n            >\n              <NetworkSelection />\n            </motion.div>\n          )}\n          {steps[step] === Steps[Steps.PaymentMethod] && (\n            <motion.div\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              initial={{ opacity: 0 }}\n              key={Steps[step]}\n            >\n              <PaymentMethod />\n            </motion.div>\n          )}\n          {steps[step] === Steps[Steps.EnterAmount] && (\n            <motion.div\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              initial={{ opacity: 0 }}\n              key={Steps[step]}\n            >\n              <EnterAmount />\n            </motion.div>\n          )}\n          {steps[step] === Steps[Steps.Summary] && (\n            <motion.div\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              initial={{ opacity: 0 }}\n              key={Steps[step]}\n            >\n              {state.method?.value === 'qr' ? <QRCode /> : null}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <div className=\"!mt-0 w-full border-t border-neutral-200 bg-neutral-100 py-2 text-center dark:border-neutral-700 dark:bg-neutral-800\">\n        <div className=\"flex items-center justify-center\">\n          <a\n            aria-label=\"Map3.xyz\"\n            className=\"flex gap-1 text-xxs text-neutral-400\"\n            href=\"https://map3.xyz\"\n            target=\"_blank\"\n          >\n            Powered by <div className=\"h-3\">{<Logo className=\"h-3\" />}</div>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype Props = {\n  onClose: () => void;\n};\n\nexport default Map3SdkSteps;\n","<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 17.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n\t  viewBox=\"0 0 359 300\" enable-background=\"new 0 0 359 300\" xml:space=\"preserve\">\n<g>\n\t\n\t\t<linearGradient id=\"SVGID_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"-2656.2571\" y1=\"-1606.5598\" x2=\"-2469.7222\" y2=\"-1606.5598\" gradientTransform=\"matrix(-0.7828 0.6223 -0.6223 -0.7828 -2707.688 489.0737)\">\n\t\t<stop  offset=\"0\" style=\"stop-color:#FFF33B\"/>\n\t\t<stop  offset=\"0.0595\" style=\"stop-color:#FFE029\"/>\n\t\t<stop  offset=\"0.1303\" style=\"stop-color:#FFD218\"/>\n\t\t<stop  offset=\"0.2032\" style=\"stop-color:#FEC90F\"/>\n\t\t<stop  offset=\"0.2809\" style=\"stop-color:#FDC70C\"/>\n\t\t<stop  offset=\"0.6685\" style=\"stop-color:#F3903F\"/>\n\t\t<stop  offset=\"0.8876\" style=\"stop-color:#ED683C\"/>\n\t\t<stop  offset=\"1\" style=\"stop-color:#E7733F\"/>\n\t</linearGradient>\n\t<path fill=\"url(#SVGID_1_)\" d=\"M322.752,281.792c0.01,15.751-19.741,22.819-29.727,10.638L148.494,113.064l119.721-95.181\n\t\tc21.96-17.459,54.372-1.832,54.39,26.222L322.752,281.792z\"/>\n\t\n\t\t<linearGradient id=\"SVGID_2_\" gradientUnits=\"userSpaceOnUse\" x1=\"-428.414\" y1=\"928.0759\" x2=\"-241.8791\" y2=\"928.0759\" gradientTransform=\"matrix(0.7828 -0.6223 0.6223 0.7828 -254.5354 -786.6841)\">\n\t\t<stop  offset=\"0\" style=\"stop-color:#FFF33B\"/>\n\t\t<stop  offset=\"0.0595\" style=\"stop-color:#FFE029\"/>\n\t\t<stop  offset=\"0.1303\" style=\"stop-color:#FFD218\"/>\n\t\t<stop  offset=\"0.2032\" style=\"stop-color:#FEC90F\"/>\n\t\t<stop  offset=\"0.2809\" style=\"stop-color:#FDC70C\"/>\n\t\t<stop  offset=\"0.6685\" style=\"stop-color:#F3903F\"/>\n\t\t<stop  offset=\"0.8876\" style=\"stop-color:#ED683C\"/>\n\t\t<stop  offset=\"1\" style=\"stop-color:#EB583C\"/>\n\t</linearGradient>\n\t<path fill=\"url(#SVGID_2_)\" d=\"M36.248,18.208C36.238,2.457,55.989-4.611,65.975,7.57l144.531,179.366L90.785,282.117\n\t\tc-21.96,17.459-54.372,1.832-54.39-26.222L36.248,18.208z\"/>\n</g>\n</svg>\n","import React from 'react';\n\nconst ProgressBar: React.FC<Props> = ({ progress }) => {\n  return (\n    <div className=\"relative h-1 w-full rounded-lg bg-neutral-100 dark:bg-neutral-800\">\n      <div\n        className=\"absolute left-0 h-full rounded-lg bg-blue-600 transition-all duration-150\"\n        style={{ width: progress * 100 + '%' }}\n      ></div>\n    </div>\n  );\n};\n\ntype Props = {\n  progress: number;\n};\n\nexport default ProgressBar;\n","import React, { useContext } from 'react';\n\nimport ErrorWrapper from '../../components/ErrorWrapper';\nimport InnerWrapper from '../../components/InnerWrapper';\nimport LoadingWrapper from '../../components/LoadingWrapper';\nimport { useGetAssetsQuery } from '../../generated/apollo-gql';\nimport { Context, Steps } from '../../providers/Store';\n\nconst AssetSelection: React.FC<Props> = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const { data, error, loading, refetch } = useGetAssetsQuery();\n\n  if (loading) return <LoadingWrapper />;\n\n  if (error) {\n    return (\n      <ErrorWrapper\n        description=\"We couldn't get a list of assets to select.\"\n        header=\"Error Fetching Assets\"\n        retry={() => refetch()}\n      />\n    );\n  }\n\n  return (\n    <>\n      <InnerWrapper>\n        <h3\n          className=\"text-lg font-semibold dark:text-white\"\n          data-testid=\"select-asset\"\n        >\n          Select Asset\n        </h3>\n        <h5 className=\"text-xs text-neutral-400\">\n          Select the Asset you want to deposit.\n        </h5>\n      </InnerWrapper>\n      <div className=\"flex flex-col dark:text-white\">\n        {data?.assets?.map((asset) => {\n          if (!asset) return null;\n\n          return (\n            <div\n              className=\"flex items-center justify-between border-t border-neutral-200 px-4 py-3 text-sm hover:bg-neutral-100 dark:border-neutral-700 hover:dark:bg-neutral-800\"\n              key={asset?.name}\n              onClick={() => {\n                dispatch({ payload: asset, type: 'SET_ASSET' });\n                dispatch({ payload: Steps.NetworkSelection, type: 'SET_STEP' });\n              }}\n              role=\"button\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <div className=\"flex w-4 justify-center\">\n                  <img\n                    className=\"h-4\"\n                    src={asset?.logo!.svg || asset?.logo!.png || ''}\n                  />\n                </div>\n                <span>{asset?.name}</span>\n              </div>\n              {asset.symbol === state.asset?.symbol ? (\n                <i className=\"fa fa-check-circle text-green-400\" />\n              ) : (\n                <i className=\"fa fa-chevron-right text-xxs\" />\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\ntype Props = {};\n\nexport default AssetSelection;\n","import { Badge } from '@map3xyz/components';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport InnerWrapper from '../../components/InnerWrapper';\nimport MethodIcon from '../../components/MethodIcon';\nimport { Context, Steps } from '../../providers/Store';\n\nconst BASE_FONT_SIZE = 48;\n\nconst rates = {\n  'BTC/USD': 20_000,\n};\n\nconst EnterAmount: React.FC<Props> = () => {\n  const dummyInputRef = useRef<HTMLSpanElement>(null);\n  const dummySymbolRef = useRef<HTMLSpanElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const formRef = useRef<HTMLFormElement>(null);\n  const quoteRef = useRef<HTMLSpanElement>(null);\n\n  const [state, dispatch] = useContext(Context);\n  const [formValue, setFormValue] = useState<{\n    base: string;\n    inputSelected: 'crypto' | 'fiat';\n    quote: string;\n  }>({ base: '0', inputSelected: 'fiat', quote: '0' });\n\n  useEffect(() => {\n    dummyInputRef.current!.innerText = formValue.base;\n    let nextInputWidth = dummyInputRef.current!.getBoundingClientRect().width;\n    const symbolWidth = dummySymbolRef.current!.getBoundingClientRect().width;\n    const formWidth = formRef.current!.getBoundingClientRect().width;\n\n    if (inputRef.current && formRef.current) {\n      if (nextInputWidth + symbolWidth > formWidth) {\n        const percentFontChange = formWidth / (nextInputWidth + symbolWidth);\n        const fontSize = Math.floor(BASE_FONT_SIZE * percentFontChange) - 1;\n\n        nextInputWidth = formWidth;\n\n        formRef.current.style.fontSize = `${fontSize}px`;\n        inputRef.current.style.width = `${nextInputWidth}px`;\n      } else {\n        inputRef.current.style.width = `${nextInputWidth}px`;\n        formRef.current.style.fontSize = `${BASE_FONT_SIZE}px`;\n      }\n    }\n  }, [formValue]);\n\n  useEffect(() => {\n    const rate = rates['BTC/USD'];\n    const base = parseFloat(formValue.base || '0');\n    const quote =\n      formValue.inputSelected === 'crypto' ? base * rate : base / rate;\n    setFormValue((formValue) => ({\n      ...formValue,\n      quote:\n        formValue.inputSelected === 'crypto'\n          ? quote.toFixed(2)\n          : quote.toFixed(8),\n    }));\n  }, [formValue.base]);\n\n  const toggleBase = () => {\n    if (inputRef.current) {\n      inputRef.current.value = quoteRef.current!.innerText;\n      inputRef.current.focus();\n\n      setFormValue((formValue) => ({\n        base: quoteRef.current!.innerText,\n        inputSelected: formValue.inputSelected === 'fiat' ? 'crypto' : 'fiat',\n        quote: formValue.base,\n      }));\n    }\n  };\n\n  if (!state.asset || !state.network || !state.method) {\n    dispatch({ payload: Steps.AssetSelection, type: 'SET_STEP' });\n    return null;\n  }\n\n  return (\n    <>\n      <InnerWrapper>\n        <h3\n          className=\"text-lg font-semibold dark:text-white\"\n          data-testid=\"enter-amount\"\n        >\n          Enter Amount\n        </h3>\n      </InnerWrapper>\n      <div className=\"w-full border-y border-neutral-200 bg-neutral-100 px-4 py-3 font-bold leading-6 dark:border-neutral-700 dark:bg-neutral-800 dark:text-white\">\n        Deposit{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.AssetSelection,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.asset.name || ''}\n          </Badge>\n        </span>{' '}\n        on{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({ payload: Steps.NetworkSelection, type: 'SET_STEP' });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.network.name || ''}\n          </Badge>\n        </span>{' '}\n        via{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.PaymentMethod,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          {/* @ts-ignore */}\n          <Badge color=\"blue\" size=\"large\">\n            {/* @ts-ignore */}\n            <span className=\"flex items-center gap-1\">\n              <MethodIcon method={state.method} /> {state.method.name}\n            </span>\n          </Badge>\n        </span>\n      </div>\n      <InnerWrapper>\n        <form\n          className=\"flex flex-col items-center justify-center py-8 text-5xl font-semibold dark:text-white\"\n          onChange={(event) => {\n            const target = event.target as HTMLInputElement;\n            setFormValue((formValue) => ({\n              ...formValue,\n              [target.name]: target.value,\n            }));\n          }}\n          ref={formRef}\n        >\n          <div className=\"relative box-border flex max-w-full items-center justify-center\">\n            {formValue.inputSelected === 'fiat' ? (\n              <span className=\"text-inherit\">$</span>\n            ) : null}\n            <input\n              autoFocus\n              className=\"flex h-14 max-w-full bg-transparent text-center text-inherit outline-0 ring-0\"\n              data-testid=\"input\"\n              name=\"base\"\n              placeholder=\"0\"\n              ref={inputRef}\n              style={{ minWidth: `${BASE_FONT_SIZE}px` }}\n              type=\"number\"\n            />\n            <span\n              className=\"invisible absolute -left-96 -top-96 pl-6 !text-5xl\"\n              ref={dummyInputRef}\n            />\n            <span\n              className=\"invisible absolute -left-96 -top-96 pl-6 !text-5xl\"\n              ref={dummySymbolRef}\n            >\n              {formValue.inputSelected === 'crypto' ? 'BTC' : '$'}\n            </span>\n            {formValue.inputSelected === 'crypto' ? (\n              <span className=\"text-inherit\">BTC</span>\n            ) : null}\n          </div>\n          <div className=\"mt-8 flex items-center justify-center text-neutral-400\">\n            <div className=\"text-xs\">\n              {formValue.inputSelected === 'crypto' ? (\n                <span>$&nbsp;</span>\n              ) : null}\n              <span data-testid=\"quote\" ref={quoteRef}>\n                {formValue.quote}\n              </span>\n              {formValue.inputSelected === 'fiat' ? (\n                <span>&nbsp;BTC</span>\n              ) : null}\n            </div>\n            <div className=\"ml-4 flex items-center justify-center\">\n              <div\n                className=\"flex cursor-pointer flex-col text-xxs transition-colors duration-100 hover:text-blue-600 hover:dark:text-blue-600\"\n                data-testid=\"toggle-base\"\n                onClick={toggleBase}\n                role=\"button\"\n              >\n                <i className=\"fa fa-chevron-up\" />\n                <i className=\"fa fa-chevron-down\" />\n              </div>\n            </div>\n          </div>\n        </form>\n      </InnerWrapper>\n    </>\n  );\n};\n\ntype Props = {};\n\nexport default EnterAmount;\n","import React from 'react';\n\nimport { PaymentMethod } from '../../generated/apollo-gql';\n\nconst MethodIcon: React.FC<Props> = ({ method }) => {\n  return (\n    <>\n      {method.icon ? (\n        <i className={method.icon + ' h-4 w-4'} />\n      ) : method.logo ? (\n        <img className=\"h-4 w-4\" src={method.logo} />\n      ) : null}\n    </>\n  );\n};\n\ntype Props = {\n  method: PaymentMethod;\n};\n\nexport default MethodIcon;\n","import { Badge } from '@map3xyz/components';\nimport React, { useContext } from 'react';\n\nimport ErrorWrapper from '../../components/ErrorWrapper';\nimport InnerWrapper from '../../components/InnerWrapper';\nimport LoadingWrapper from '../../components/LoadingWrapper';\nimport { useGetNetworksQuery } from '../../generated/apollo-gql';\nimport { Context, Steps } from '../../providers/Store';\n\nconst NetworkSelection: React.FC<Props> = () => {\n  const [state, dispatch] = useContext(Context);\n\n  const { data, error, loading, refetch } = useGetNetworksQuery();\n\n  if (loading) return <LoadingWrapper message=\"Fetching Networks...\" />;\n\n  if (error)\n    return (\n      <ErrorWrapper\n        description=\"We couldn't get a list of networks to select.\"\n        header=\"Error Fetching Networks\"\n        retry={refetch}\n      />\n    );\n\n  if (!state.asset) {\n    dispatch({ payload: Steps.AssetSelection, type: 'SET_STEP' });\n    return null;\n  }\n\n  return (\n    <>\n      <InnerWrapper>\n        <h3\n          className=\"text-lg font-semibold dark:text-white\"\n          data-testid=\"network-select\"\n        >\n          Select Network\n        </h3>\n        <h5 className=\"text-xs text-neutral-400\">\n          Select the Network to deposit <b>{state.asset.name}</b> on.\n        </h5>\n      </InnerWrapper>\n      <div className=\"w-full border-t border-neutral-200 bg-neutral-100 px-4 py-3 font-bold dark:border-neutral-700 dark:bg-neutral-800 dark:text-white\">\n        Deposit{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.AssetSelection,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.asset.name || ''}\n          </Badge>\n        </span>{' '}\n        on\n      </div>\n      <div className=\"flex flex-col dark:text-white\">\n        {data?.networks?.map((network) =>\n          network ? (\n            <div\n              className=\"flex items-center justify-between border-t border-neutral-200 px-4 py-3 text-sm hover:bg-neutral-100 dark:border-neutral-700 hover:dark:bg-neutral-800\"\n              key={network.symbol}\n              onClick={() => {\n                dispatch({ payload: network, type: 'SET_NETWORK' });\n                dispatch({ payload: Steps.PaymentMethod, type: 'SET_STEP' });\n              }}\n              role=\"button\"\n            >\n              <span>{network.symbol}</span>\n              {state.network?.symbol === network.symbol ? (\n                <i className=\"fa fa-check-circle text-green-400\" />\n              ) : (\n                <i className=\"fa fa-chevron-right text-xxs\" />\n              )}\n            </div>\n          ) : null\n        )}\n      </div>\n    </>\n  );\n};\n\ntype Props = {};\n\nexport default NetworkSelection;\n","import { Badge } from '@map3xyz/components';\nimport React, { useContext } from 'react';\n\nimport ErrorWrapper from '../../components/ErrorWrapper';\nimport InnerWrapper from '../../components/InnerWrapper';\nimport LoadingWrapper from '../../components/LoadingWrapper';\nimport MethodIcon from '../../components/MethodIcon';\nimport { useGetPaymentMethodsQuery } from '../../generated/apollo-gql';\nimport { Context, Steps } from '../../providers/Store';\n\nconst PaymentMethod: React.FC<Props> = () => {\n  const [state, dispatch] = useContext(Context);\n  const { data, error, loading, refetch } = useGetPaymentMethodsQuery();\n\n  if (loading) return <LoadingWrapper message=\"Fetching Payment Methods...\" />;\n  if (error)\n    return (\n      <ErrorWrapper\n        description=\"We couldn't get a list of payment methods to select.\"\n        header=\"Error Fetching Payment Methods\"\n        retry={refetch}\n      />\n    );\n\n  if (!state.asset || !state.network) {\n    dispatch({ payload: Steps.AssetSelection, type: 'SET_STEP' });\n    return null;\n  }\n\n  return (\n    <>\n      <InnerWrapper>\n        <h3\n          className=\"text-lg font-semibold dark:text-white\"\n          data-testid=\"payment-method\"\n        >\n          Payment Method\n        </h3>\n        <h5 className=\"text-xs text-neutral-400\">\n          How do you want to deposit?\n        </h5>\n      </InnerWrapper>\n      <div className=\"w-full border-t border-neutral-200 bg-neutral-100 px-4 py-3 font-bold dark:border-neutral-700 dark:bg-neutral-800 dark:text-white\">\n        Deposit{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.AssetSelection,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.asset?.name || ''}\n          </Badge>\n        </span>{' '}\n        on{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({ payload: Steps.NetworkSelection, type: 'SET_STEP' });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.network?.name || ''}\n          </Badge>\n        </span>{' '}\n        via\n      </div>\n      <div className=\"flex flex-col dark:text-white\">\n        {data?.methods?.map((method) =>\n          method ? (\n            <div\n              className={`flex items-center justify-between border-t border-neutral-200 px-4 py-3 text-sm hover:bg-neutral-100 dark:border-neutral-700 hover:dark:bg-neutral-800 ${\n                method.enabled\n                  ? ''\n                  : '!cursor-not-allowed opacity-50 hover:bg-white dark:hover:bg-neutral-900'\n              }`}\n              key={method.value}\n              onClick={() => {\n                if (!method.enabled) {\n                  return;\n                }\n                dispatch({\n                  payload: method,\n                  type: 'SET_PAYMENT_METHOD',\n                });\n                if (method.value === 'qr') {\n                  dispatch({\n                    payload: [\n                      'AssetSelection',\n                      'NetworkSelection',\n                      'PaymentMethod',\n                      'Summary',\n                    ],\n                    type: 'SET_STEPS',\n                  });\n                  dispatch({ payload: Steps.Summary, type: 'SET_STEP' });\n                } else {\n                  dispatch({\n                    payload: [\n                      'AssetSelection',\n                      'NetworkSelection',\n                      'PaymentMethod',\n                      'EnterAmount',\n                      'Summary',\n                    ],\n                    type: 'SET_STEPS',\n                  });\n                  dispatch({ payload: Steps.EnterAmount, type: 'SET_STEP' });\n                }\n              }}\n              role=\"button\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <MethodIcon method={method} />\n                <span>{method.name}</span>\n                {!method.enabled && <Badge color=\"yellow\">Coming Soon</Badge>}\n              </div>\n              {state.method?.value === method.value ? (\n                <i className=\"fa fa-check-circle text-green-400\" />\n              ) : (\n                <i className=\"fa fa-chevron-right text-xxs\" />\n              )}\n            </div>\n          ) : null\n        )}\n      </div>\n    </>\n  );\n};\n\ntype Props = {};\n\nexport default PaymentMethod;\n","import { Badge, ReadOnlyText } from '@map3xyz/components';\nimport { QRCodeSVG } from 'qrcode.react';\nimport React, { useContext, useEffect } from 'react';\n\nimport InnerWrapper from '../../components/InnerWrapper';\nimport MethodIcon from '../../components/MethodIcon';\nimport { Context, Steps } from '../../providers/Store';\n\nconst QRCode: React.FC<Props> = () => {\n  const [state, dispatch, { generateDepositAddress }] = useContext(Context);\n\n  if (!state.asset || !state.network || !state.method) {\n    dispatch({ payload: Steps.AssetSelection, type: 'SET_STEP' });\n    return null;\n  }\n\n  useEffect(() => {\n    const run = async () => {\n      try {\n        dispatch({ type: 'GENERATE_DEPOSIT_ADDRESS_LOADING' });\n        const address = await generateDepositAddress(\n          state.asset?.symbol as string,\n          state.network?.symbol as string\n        );\n        dispatch({\n          payload: address,\n          type: 'GENERATE_DEPOSIT_ADDRESS_SUCCESS',\n        });\n      } catch (e) {\n        dispatch({ type: 'GENERATE_DEPOSIT_ADDRESS_ERROR' });\n      }\n    };\n    run();\n\n    return () => {\n      dispatch({ type: 'GENERATE_DEPOSIT_ADDRESS_IDLE' });\n    };\n  }, []);\n\n  return (\n    <div>\n      <InnerWrapper>\n        <h3\n          className=\"text-lg font-semibold dark:text-white\"\n          data-testid=\"qrcode-method\"\n        >\n          Scan QR Code\n        </h3>\n      </InnerWrapper>\n      <div className=\"w-full border-y border-neutral-200 bg-neutral-100 px-4 py-3 font-bold dark:border-neutral-700 dark:bg-neutral-800 dark:text-white\">\n        Deposit{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.AssetSelection,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.asset?.name || ''}\n          </Badge>\n        </span>{' '}\n        on{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({ payload: Steps.NetworkSelection, type: 'SET_STEP' });\n          }}\n          role=\"button\"\n        >\n          <Badge color=\"blue\" size=\"large\">\n            {state.network?.symbol || ''}\n          </Badge>\n        </span>{' '}\n        via{' '}\n        <span\n          className=\"text-blue-600 underline\"\n          onClick={() => {\n            dispatch({\n              payload: Steps.PaymentMethod,\n              type: 'SET_STEP',\n            });\n          }}\n          role=\"button\"\n        >\n          {/* @ts-ignore */}\n          <Badge color=\"blue\" size=\"large\">\n            {/* @ts-ignore */}\n            <span className=\"flex items-center gap-1\">\n              <MethodIcon method={state.method} /> {state.method.name}\n            </span>\n          </Badge>\n        </span>\n      </div>\n      <InnerWrapper>\n        {state.depositAddress.status === 'loading' && (\n          <div className=\"flex h-64 items-center justify-center text-sm\">\n            <div className=\"flex flex-col items-center gap-2 font-semibold\">\n              <div className=\"animate-spin dark:text-white\">\n                <i className=\"fa fa-gear\"></i>\n              </div>\n              <span className=\"dark:text-white\">Generating Address...</span>\n            </div>\n          </div>\n        )}\n        {state.depositAddress.status === 'error' && (\n          <div className=\"flex h-64 items-center justify-center text-sm\">\n            <div className=\"flex flex-col items-center gap-2 font-semibold\">\n              <div className=\"animate-spin font-semibold text-red-600\">\n                <i className=\"fa fa-circle-xmark\"></i>\n              </div>\n              <span className=\"text-red-600\">\n                Error generating deposit address.\n              </span>\n            </div>\n          </div>\n        )}\n        {state.depositAddress.status === 'success' &&\n          state.depositAddress.data && (\n            <div className=\"flex w-full flex-col items-center justify-center gap-4 text-sm\">\n              <div className=\"text-xs text-neutral-400\">\n                Only send {state.asset.name} on the {state.network?.symbol}{' '}\n                Network to this address.\n              </div>\n              <div className=\"flex w-full justify-center\">\n                <QRCodeSVG\n                  bgColor={state.theme === 'dark' ? '#262626' : '#FFFFFF'}\n                  className=\"rounded-lg\"\n                  fgColor={state.theme === 'dark' ? '#FFFFFF' : '#000000'}\n                  imageSettings={{\n                    excavate: true,\n                    height: 40,\n                    src: state.asset.logo?.svg || state.asset.logo?.png || '',\n                    width: 40,\n                  }}\n                  includeMargin={true}\n                  size={256}\n                  style={{\n                    border:\n                      state.theme === 'dark'\n                        ? '1px solid #404040'\n                        : '1px solid #e5e5e5',\n                  }}\n                  value={state.depositAddress.data}\n                />\n              </div>\n              <div className=\"w-full\">\n                <label className=\"text-xs dark:text-white\">\n                  Deposit Address\n                </label>\n                <ReadOnlyText copyButton value={state.depositAddress.data} />\n              </div>\n            </div>\n          )}\n      </InnerWrapper>\n    </div>\n  );\n};\n\ntype Props = {};\n\nexport default QRCode;\n","import React from 'react';\n\nimport { AppProps } from './App';\nimport ErrorWrapper from './components/ErrorWrapper';\nimport LoadingWrapper from './components/LoadingWrapper';\nimport { useGetAssetsQuery, useGetNetworksQuery } from './generated/apollo-gql';\nimport { Store } from './providers/Store';\nimport Map3SdkSteps from './steps';\n\nconst AppWithAssetAndNetwork: React.FC<AppProps> = ({ config, onClose }) => {\n  const [networkString, assetString] = config?.slug?.split(':') ?? [];\n  // TODO: use network search\n  const { data, error, loading, refetch } = useGetNetworksQuery();\n  const {\n    data: assetData,\n    error: assetError,\n    loading: assetLoading,\n    refetch: assetRefetch,\n  } = useGetAssetsQuery();\n\n  if (loading || assetLoading) return <LoadingWrapper />;\n\n  const network = data?.networks?.find(\n    (network) => network?.name === networkString\n  );\n  const asset = assetData?.assets?.find((asset) => asset?.name === assetString);\n\n  if (error || assetError || !network || !asset)\n    return (\n      <ErrorWrapper\n        description=\"We had trouble loading the asset or network selected.\"\n        header=\"Failed to initialize the SDK\"\n        retry={() => {\n          refetch();\n          assetRefetch();\n        }}\n      />\n    );\n  return (\n    <Store {...config} asset={asset} network={network}>\n      <Map3SdkSteps onClose={onClose} />\n    </Store>\n  );\n};\nexport default AppWithAssetAndNetwork;\n"],"names":[],"version":3,"file":"index.esm.js.map"}