{"mappings":";AKaA;IACE,OAAO,EAAE,MAAM,CAAC;CACjB;AAID,QAAA,MAAM,OAAO,EAAE,MAAM,EAAE,CAAC,KAAK,CAuF5B,CAAC;AAEF,aAAa;IACX,OAAO,EAAE,MAAM,IAAI,CAAC;CACrB,CAAC;AAEF,OAAO,MAAM,2BAA4B,cAAc,SAWtD,CAAC;AAEF,eAAe,OAAO,CAAC","sources":["src/src/components/ProgressBar/index.tsx","src/src/providers/Store/index.tsx","src/src/steps/AssetSelection/index.tsx","src/src/steps/NetworkSelection/index.tsx","src/src/steps/PaymentMethod/index.tsx","src/src/index.tsx","src/index.tsx"],"sourcesContent":[null,null,null,null,null,null,"import '@fortawesome/fontawesome-free/css/all.min.css';\n\nimport { Modal } from '@map3xyz/components';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport ProgressBar from './components/ProgressBar';\nimport { Context, Steps, Store } from './providers/Store';\nimport AssetSelection from './steps/AssetSelection';\nimport NetworkSelection from './steps/NetworkSelection';\nimport PaymentMethod from './steps/PaymentMethod';\n\ninterface Map3InitConfig {\n  element: string;\n}\n\nconst TRANSITION = 300;\n\nconst Map3Sdk: React.FC<Props> = ({ onClose }) => {\n  const [open, setOpen] = useState(false);\n  const [state, dispatch] = useContext(Context);\n\n  const { step } = state;\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  const handleClose = () => {\n    setOpen(false);\n    setTimeout(() => {\n      onClose();\n    }, TRANSITION);\n  };\n\n  const isLastStep = state.step === Steps.__LENGTH - 1;\n\n  return (\n    <div>\n      <Modal\n        alignFooter=\"right\"\n        confirmText={isLastStep ? 'Done' : 'Continue'}\n        footerBackground\n        onCancel={handleClose}\n        onConfirm={() =>\n          isLastStep\n            ? handleClose()\n            : dispatch({ payload: step + 1, type: 'SET_STEP' })\n        }\n        size=\"small\"\n        transition={TRANSITION}\n        visible={open}\n      >\n        {step === 0 ? null : (\n          <div className=\"absolute left-1 top-2 !mt-0 p-1.5 pt-0\">\n            <button\n              onClick={() => dispatch({ payload: step - 1, type: 'SET_STEP' })}\n            >\n              <i className=\"fa transition-color fa-long-arrow-left duration-75 dark:text-neutral-600 dark:hover:text-neutral-400\" />\n            </button>\n          </div>\n        )}\n        <div className=\"absolute right-1 top-2 !mt-0 p-1.5 pt-0\">\n          <button onClick={handleClose}>\n            <i className=\"fa transition-color fa-close duration-75 dark:text-neutral-600 dark:hover:text-neutral-400\" />\n          </button>\n        </div>\n        <ProgressBar progress={step / (Steps.__LENGTH - 1)} />\n        <div className=\"!mt-0 w-full p-2\">\n          <AnimatePresence exitBeforeEnter>\n            {step === Steps.AssetSelection && (\n              <motion.div\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                initial={{ opacity: 0 }}\n                key={'AssetSelection'}\n              >\n                <AssetSelection />\n              </motion.div>\n            )}\n            {step === Steps.NetworkSelection && (\n              <motion.div\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                initial={{ opacity: 0 }}\n                key={'NetworkSelection'}\n              >\n                <NetworkSelection />\n              </motion.div>\n            )}\n            {step === Steps.PaymentMethod && (\n              <motion.div\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                initial={{ opacity: 0 }}\n                key={'PaymentMethod'}\n              >\n                <PaymentMethod />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\ntype Props = {\n  onClose: () => void;\n};\n\nexport const initMap3Sdk = ({ element }: Map3InitConfig) => {\n  const host = document.getElementById(element);\n\n  if (!host) throw new Error(`Element ${element} not found`);\n\n  const root = createRoot(host);\n  root.render(\n    <Store>\n      <Map3Sdk onClose={() => root.unmount()} />\n    </Store>\n  );\n};\n\nexport default Map3Sdk;\n"],"names":[],"version":3,"file":"index.d.ts.map"}